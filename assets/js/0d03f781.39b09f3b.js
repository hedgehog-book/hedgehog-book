"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3228],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),p=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=p(n),f=a,y=m["".concat(u,".").concat(f)]||m[f]||c[f]||i;return n?r.createElement(y,o(o({ref:t},l),{},{components:n})):r.createElement(y,o({ref:t},l))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},285:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return u},default:function(){return f},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return c}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],s={},u=void 0,p={unversionedId:"Data/Location of Missing Data",id:"Data/Location of Missing Data",title:"Location of Missing Data",description:"is_missing(input any[] | Mat | Tensor",source:"@site/math/Data/Location of Missing Data.mdx",sourceDirName:"Data",slug:"/Data/Location of Missing Data",permalink:"/math/Data/Location of Missing Data",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Local Minima",permalink:"/math/Data/Local Minima"},next:{title:"Normalize Data",permalink:"/math/Data/Normalize Data"}},l={},c=[{value:"<code>is_missing(input: any[] | Mat | Tensor) : any[] | Mat | Tensor</code>",id:"is_missinginput-any--mat--tensor--any--mat--tensor",level:4}],m={toc:c};function f(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h4",{id:"is_missinginput-any--mat--tensor--any--mat--tensor"},(0,i.kt)("inlineCode",{parentName:"h4"},"is_missing(input: any[] | Mat | Tensor) : any[] | Mat | Tensor")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"param")," ",(0,i.kt)("inlineCode",{parentName:"p"},"input")," - the array, matrix, tensor, etc where you want to find the missing element "),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"returns:")," ",(0,i.kt)("inlineCode",{parentName:"p"},"any[] | Mat | Tensor")," - The same type and length/size as ",(0,i.kt)("inlineCode",{parentName:"p"},"input"),", where element is 1 if missing, 0 if not."),(0,i.kt)("p",null,"This function effectively takes your input, which is a matrix, tensor or whatnot, and if it has a missing value in that entry it puts a '1' in it. If it is not a missing value, i.e. a valid or non-missing value, it is a '0'. So you get returned a matrix or tensor or whatever you put in ",(0,i.kt)("inlineCode",{parentName:"p"},"input")," with 0's and 1's, where 1's represent missing elements and 0's otherwise. "),(0,i.kt)("p",null,"Note that ",(0,i.kt)("inlineCode",{parentName:"p"},"NaN"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"null"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"''"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," are defined to be missing and [] and {} are not."),(0,i.kt)("p",null,"This is useful for getting an array where you know all the locations of the missing elements but not having an effect on them yet. "),(0,i.kt)("iframe",{src:"https://hlab.app/s/docs/is_missing_hbook",width:"100%",height:"500px"}))}f.isMDXComponent=!0}}]);