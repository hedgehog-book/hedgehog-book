"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5021],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return d}});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=n.createContext({}),u=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),f=u(r),d=i,m=f["".concat(l,".").concat(d)]||f[d]||s[d]||a;return r?n.createElement(m,o(o({ref:t},p),{},{components:r})):n.createElement(m,o({ref:t},p))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=f;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:i,o[1]=c;for(var u=2;u<a;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},733:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return c},metadata:function(){return u},toc:function(){return s}});var n=r(7462),i=r(3366),a=(r(7294),r(3905)),o=["components"],c={},l=void 0,u={unversionedId:"Properties/Check for Diagonability",id:"Properties/Check for Diagonability",title:"Check for Diagonability",description:"is_diag(input boolean",source:"@site/math/Properties/Check for Diagonability.mdx",sourceDirName:"Properties",slug:"/Properties/Check for Diagonability",permalink:"/math/Properties/Check for Diagonability",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"The Median",permalink:"/math/Probability and Statistics/The Median"},next:{title:"Check for Lower Triangular",permalink:"/math/Properties/Check for Lower Triangular"}},p={},s=[{value:"<code>is_diag(input: any[] | Mat) : boolean</code>",id:"is_diaginput-any--mat--boolean",level:4}],f={toc:s};function d(e){var t=e.components,r=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h4",{id:"is_diaginput-any--mat--boolean"},(0,a.kt)("inlineCode",{parentName:"h4"},"is_diag(input: any[] | Mat) : boolean")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"param")," ",(0,a.kt)("inlineCode",{parentName:"p"},"input")," - The 2d JS matrix or Mat object to check to if it's diagonal or not. "),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"returns:")," ",(0,a.kt)("inlineCode",{parentName:"p"},"boolean")," - True if diagonal, false otherwise"),(0,a.kt)("p",null,"A diagonal matrix is similar to the identity matrix (1's on the diagonal, 0's elsewhere) where the diagonal entries are free to have any number in them but outside the diagonal is all 0's. Connected concepts are the upper triangular and lower triangular matrices which are also within this book. This function specifically takes in any 2d JS matrix or Mat object as an input and determines whether it's diagonal or not. If it is, it returns true, otherwise false."),(0,a.kt)("iframe",{src:"https://hlab.app/s/docs/hbook_is_diag",width:"100%",height:"500px"}))}d.isMDXComponent=!0}}]);