"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7673],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return d}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},s=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),m=l(r),d=a,f=m["".concat(c,".").concat(d)]||m[d]||p[d]||i;return r?n.createElement(f,o(o({ref:t},s),{},{components:r})):n.createElement(f,o({ref:t},s))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var u={};for(var c in t)hasOwnProperty.call(t,c)&&(u[c]=t[c]);u.originalType=e,u.mdxType="string"==typeof e?e:a,o[1]=u;for(var l=2;l<i;l++)o[l]=r[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},2486:function(e,t,r){r.r(t),r.d(t,{assets:function(){return s},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return u},metadata:function(){return l},toc:function(){return p}});var n=r(7462),a=r(3366),i=(r(7294),r(3905)),o=["components"],u={},c=void 0,l={unversionedId:"Probability and Statistics/Inter-quartile Range",id:"Probability and Statistics/Inter-quartile Range",title:"Inter-quartile Range",description:"",source:"@site/math/Probability and Statistics/Inter-quartile Range.mdx",sourceDirName:"Probability and Statistics",slug:"/Probability and Statistics/Inter-quartile Range",permalink:"/math/Probability and Statistics/Inter-quartile Range",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Covariance",permalink:"/math/Probability and Statistics/Covariance"},next:{title:"Maximum",permalink:"/math/Probability and Statistics/Maximum"}},s={},p=[{value:"<code>iqr(input: any[] | Mat | Tensor) : Number</code>",id:"iqrinput-any--mat--tensor--number",level:4}],m={toc:p};function d(e){var t=e.components,r=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h4",{id:"iqrinput-any--mat--tensor--number"},(0,i.kt)("inlineCode",{parentName:"h4"},"iqr(input: any[] | Mat | Tensor) : Number")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"param")," ",(0,i.kt)("inlineCode",{parentName:"p"},"input")," a JS array, matrix or tensor, or a series of numbers, to find the inter quartile range of "),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"returns")," - ",(0,i.kt)("inlineCode",{parentName:"p"},"Number")," - a number representing the inter quartile range."),(0,i.kt)("p",null,"The interquartile range, or the midspread or middle 50%, is the difference between the 75th and 25th percentiles of the data. So this function is taking data from a construct, whether it is a series of numbers, a declared array, Mat, or Tensor and finds the 75% and 25% percentiles, namely 'q1' and 'q3', the 1st and 3rd quantiles for 0.25 and 0.75. Then we return q3-q1 to end up with the iqr or midspread or middle 50%, or q2."),(0,i.kt)("iframe",{src:"https://hlab.app/s/LinJianan/iqr_book",width:"100%",height:"500px"}))}d.isMDXComponent=!0}}]);