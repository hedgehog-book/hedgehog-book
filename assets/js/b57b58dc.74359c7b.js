"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5678],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return f}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var m=r.createContext({}),c=function(e){var t=r.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(m.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,m=e.parentName,l=u(e,["components","mdxType","originalType","parentName"]),p=c(n),f=i,b=p["".concat(m,".").concat(f)]||p[f]||s[f]||a;return n?r.createElement(b,o(o({ref:t},l),{},{components:n})):r.createElement(b,o({ref:t},l))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=p;var u={};for(var m in t)hasOwnProperty.call(t,m)&&(u[m]=t[m]);u.originalType=e,u.mdxType="string"==typeof e?e:i,o[1]=u;for(var c=2;c<a;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},583:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return m},default:function(){return f},frontMatter:function(){return u},metadata:function(){return c},toc:function(){return s}});var r=n(7462),i=n(3366),a=(n(7294),n(3905)),o=["components"],u={},m=void 0,c={unversionedId:"Probability and Statistics/Minimum",id:"Probability and Statistics/Minimum",title:"Minimum",description:"min(input Number",source:"@site/math/Probability and Statistics/Minimum.mdx",sourceDirName:"Probability and Statistics",slug:"/Probability and Statistics/Minimum",permalink:"/math/Probability and Statistics/Minimum",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Minimum-k",permalink:"/math/Probability and Statistics/Minimum-k"},next:{title:"Multinomial Coefficient",permalink:"/math/Probability and Statistics/Multinomial Coefficient"}},l={},s=[{value:"<code>min(input: Number | any[] | Mat | Tensor) : Number</code>",id:"mininput-number--any--mat--tensor--number",level:4}],p={toc:s};function f(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h4",{id:"mininput-number--any--mat--tensor--number"},(0,a.kt)("inlineCode",{parentName:"h4"},"min(input: Number | any[] | Mat | Tensor) : Number")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"param")," ",(0,a.kt)("inlineCode",{parentName:"p"},"input")," - a number, any JS array 1d or 2d, a Mat or Tensor, where you want to find the minimum value"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"returns:")," ",(0,a.kt)("inlineCode",{parentName:"p"},"Number")," - the number representing the minimum value of the structure given"),(0,a.kt)("p",null,"This function similar to max, finds the minimum element in a given structure, whether its a 1d list, 2d matrix, Tensor, Mat or even a number itself (the trivial case). Basically, its finding the smallest element of a set where the elements are real numbers. "),(0,a.kt)("iframe",{src:"https://hlab.app/s/docs/hbook_min",width:"100%",height:"500px"}))}f.isMDXComponent=!0}}]);