"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6121],{3905:function(e,n,r){r.d(n,{Zo:function(){return m},kt:function(){return f}});var t=r(7294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function a(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function u(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=t.createContext({}),p=function(e){var n=t.useContext(s),r=n;return e&&(r="function"==typeof e?e(n):a(a({},n),e)),r},m=function(e){var n=p(e.components);return t.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},l=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,m=u(e,["components","mdxType","originalType","parentName"]),l=p(r),f=o,d=l["".concat(s,".").concat(f)]||l[f]||c[f]||i;return r?t.createElement(d,a(a({ref:n},m),{},{components:r})):t.createElement(d,a({ref:n},m))}));function f(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=l;var u={};for(var s in n)hasOwnProperty.call(n,s)&&(u[s]=n[s]);u.originalType=e,u.mdxType="string"==typeof e?e:o,a[1]=u;for(var p=2;p<i;p++)a[p]=r[p];return t.createElement.apply(null,a)}return t.createElement.apply(null,r)}l.displayName="MDXCreateElement"},2371:function(e,n,r){r.r(n),r.d(n,{assets:function(){return m},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return u},metadata:function(){return p},toc:function(){return c}});var t=r(7462),o=r(3366),i=(r(7294),r(3905)),a=["components"],u={},s=void 0,p={unversionedId:"Properties/The Number of Dimensions",id:"Properties/The Number of Dimensions",title:"The Number of Dimensions",description:"ndim(input Number",source:"@site/math/Properties/The Number of Dimensions.mdx",sourceDirName:"Properties",slug:"/Properties/The Number of Dimensions",permalink:"/math/Properties/The Number of Dimensions",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Determinant",permalink:"/math/Properties/Determinant"},next:{title:"The Shape",permalink:"/math/Properties/The Shape"}},m={},c=[{value:"<code>ndim(input: any[] | Mat | Tensor | number) : Number</code>",id:"ndiminput-any--mat--tensor--number--number",level:4}],l={toc:c};function f(e){var n=e.components,r=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,t.Z)({},l,r,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h4",{id:"ndiminput-any--mat--tensor--number--number"},(0,i.kt)("inlineCode",{parentName:"h4"},"ndim(input: any[] | Mat | Tensor | number) : Number")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"param")," ",(0,i.kt)("inlineCode",{parentName:"p"},"input")," - Any JavaScript array, Mat, Tensor or even a number"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"returns:")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Number")," - The dimension of the structure. "),(0,i.kt)("p",null,"This function, while small, is quite useful. It determines the dimension of a structure. For example, a vector is 1-dimensional. A 2-d array is 2-dimensional. A 3-d array or 3d tensor is of dimension 3 and so on. A number has dimension 0. Very useful for splitting cases based on dimension type."),(0,i.kt)("iframe",{src:"https://hlab.app/s/docs/ndim_hbook",width:"100%",height:"500px"}))}f.isMDXComponent=!0}}]);